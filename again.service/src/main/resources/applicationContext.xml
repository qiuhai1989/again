<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
       http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
           "
       default-lazy-init="true">

       <context:property-placeholder location="classpath:config/jdbc.properties,config/common.properties" ignore-resource-not-found="true"
            ignore-unresolvable="true" local-override="true" />

       <context:component-scan base-package="com.haqiu">
              <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
       </context:component-scan>

       <context:annotation-config />

       <bean id="log-filter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
              <property name="resultSetLogEnabled" value="false" />
              <property name="statementExecutableSqlLogEnable" value="true" />
       </bean>

       <!-- 配置数据源 -->
       <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
             init-method="init" destroy-method="close">
              <property name="url" value="${jdbc_url}" />
              <property name="username" value="${jdbc_username}" />
              <property name="password" value="${jdbc_password}" />

              <!-- 初始化连接大小 -->
              <property name="initialSize" value="5" />
              <!-- 连接池最大使用连接数量 -->
              <property name="maxActive" value="10" />
              <!-- 连接池最小空闲 -->
              <property name="minIdle" value="3" />
              <!-- 获取连接最大等待时间 -->
              <property name="maxWait" value="60000" />

              <property name="validationQuery" value="${validationQuery}" />
              <property name="testOnBorrow" value="false" />
              <property name="testOnReturn" value="false" />
              <property name="testWhileIdle" value="true" />

              <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
              <property name="timeBetweenEvictionRunsMillis" value="60000" />
              <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
              <property name="minEvictableIdleTimeMillis" value="25200000" />

              <!-- 打开removeAbandoned功能 -->
              <property name="removeAbandoned" value="true" />
              <!-- 1800秒，也就是30分钟 -->
              <property name="removeAbandonedTimeout" value="1800" />
              <!-- 关闭abanded连接时输出错误日志 -->
              <property name="logAbandoned" value="true" />

              <!-- 监控数据库 -->
              <!-- <property name="filters" value="stat" /> -->
              <property name="filters" value="mergeStat,wall" />

              <property name="proxyFilters">
                     <list>
                            <ref bean="log-filter"/>
                     </list>
              </property>

       </bean>

       <!-- 配置druid监控spring jdbc -->
       <bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor"></bean>

       <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
              <property name="patterns">
                     <list>
                            <value>com.haqiu.core.service.*</value>
                     </list>
              </property>
       </bean>


       <aop:config>
              <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
       </aop:config>

       <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
              <property name="dataSource" ref="dataSource"/>
              <property name="packagesToScan"    value="com.haqiu.core.entity"  />
              <property name="jpaVendorAdapter" >
                     <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                            <property name="showSql" value="true"/>
                            <property name="generateDdl" value="false"/>
                            <!--<property name="databasePlatform" value=""/>-->
                     </bean>
              </property>
              <property name="jpaProperties">
                  <props>
                      <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                      <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                      <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
                      <prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
                      <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
                      <prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
                      <prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
                      <prop key="hibernate.connection.isolation">3</prop>
                      <prop key="javax.persistence.validation.mode">none</prop>
                      <prop key="hibernate.search.autoregister_listeners">true</prop>
                      <prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.FSDirectoryProvider</prop>
                      <prop key="hibernate.search.default.indexBase">${java.io.tmpdir}/${system.project_name}/index</prop>
                      <!-- 在控制台打印SQL语句 -->
                      <prop key="hibernate.show_sql">true</prop>
                      <prop key="hibernate.format_sql">true</prop>
                      <!-- Hiberante将为SQL产生注释，这样更利于调试-->
                      <prop key="hibernate.use_sql_comments">true</prop>
                  </props>
              </property>
        </bean>

       <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
              <property name="entityManagerFactory" ref="entityManagerFactory" />
       </bean>

       <tx:annotation-driven transaction-manager="transactionManager" />

       <jpa:repositories base-package="com.haqiu.core.repository" entity-manager-factory-ref="entityManagerFactory"
                         transaction-manager-ref="transactionManager" />


</beans>